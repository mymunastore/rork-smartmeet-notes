import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { MessageCircle, Sparkles, HelpCircle, Lightbulb } from 'lucide-react-native';\nimport { useRouter } from 'expo-router';\n\nimport Colors from '@/constants/colors';\nimport { useChat } from '@/hooks/use-chat-store';\nimport { Note } from '@/types/note';\n\ninterface QuickChatActionsProps {\n  note?: Note;\n  style?: any;\n}\n\nexport default function QuickChatActions({ note, style }: QuickChatActionsProps) {\n  const router = useRouter();\n  const { addSystemMessage } = useChat();\n\n  const askAboutNote = () => {\n    if (!note) return;\n    \n    const message = `I'd like to know more about this note: \"${note.title}\". ${note.summary ? `Summary: ${note.summary}` : ''} Can you help me understand the key points and suggest any follow-up actions?`;\n    \n    addSystemMessage(`User asked about note: \"${note.title}\"`);\n    router.push('/(tabs)/chat');\n  };\n\n  const getHelp = () => {\n    const message = \"I need help using Scribe AI. Can you guide me through the main features and how to get the most out of the app?\";\n    addSystemMessage(message);\n    router.push('/(tabs)/chat');\n  };\n\n  const getSuggestions = () => {\n    const message = note \n      ? `Based on my note \"${note.title}\", can you suggest some productivity tips or related actions I should consider?`\n      : \"Can you give me some productivity tips for better note-taking and meeting management?\";\n    \n    addSystemMessage(message);\n    router.push('/(tabs)/chat');\n  };\n\n  const openChat = () => {\n    router.push('/(tabs)/chat');\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <Text style={styles.title}>ðŸ¤– AI Assistant</Text>\n      <Text style={styles.subtitle}>Get instant help and insights</Text>\n      \n      <View style={styles.actionsGrid}>\n        {note && (\n          <TouchableOpacity style={styles.actionButton} onPress={askAboutNote}>\n            <LinearGradient\n              colors={[Colors.light.nature.sage, Colors.light.nature.ocean]}\n              style={styles.actionGradient}\n            >\n              <MessageCircle size={20} color=\"#fff\" />\n              <Text style={styles.actionText}>Ask About Note</Text>\n            </LinearGradient>\n          </TouchableOpacity>\n        )}\n        \n        <TouchableOpacity style={styles.actionButton} onPress={getHelp}>\n          <LinearGradient\n            colors={[Colors.light.primary, Colors.light.secondary]}\n            style={styles.actionGradient}\n          >\n            <HelpCircle size={20} color=\"#fff\" />\n            <Text style={styles.actionText}>Get Help</Text>\n          </LinearGradient>\n        </TouchableOpacity>\n        \n        <TouchableOpacity style={styles.actionButton} onPress={getSuggestions}>\n          <LinearGradient\n            colors={[Colors.light.nature.coral, '#FF6B9D']}\n            style={styles.actionGradient}\n          >\n            <Lightbulb size={20} color=\"#fff\" />\n            <Text style={styles.actionText}>Get Tips</Text>\n          </LinearGradient>\n        </TouchableOpacity>\n        \n        <TouchableOpacity style={styles.actionButton} onPress={openChat}>\n          <LinearGradient\n            colors={['#8B5CF6', '#A855F7']}\n            style={styles.actionGradient}\n          >\n            <Sparkles size={20} color=\"#fff\" />\n            <Text style={styles.actionText}>Open Chat</Text>\n          </LinearGradient>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    borderRadius: 16,\n    padding: 20,\n    marginVertical: 16,\n    shadowColor: Colors.light.gray[300],\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: Colors.light.text,\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 14,\n    color: Colors.light.gray[600],\n    marginBottom: 16,\n  },\n  actionsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n  },\n  actionButton: {\n    flex: 1,\n    minWidth: '45%',\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  actionGradient: {\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    gap: 8,\n  },\n  actionText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#fff',\n    textAlign: 'center',\n  },\n});